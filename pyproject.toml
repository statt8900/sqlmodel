[tool.poetry]
authors = ["Sebastián Ramírez <tiangolo@gmail.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Database",
  "Topic :: Database :: Database Engines/Servers",
  "Topic :: Internet",
  "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
  "Topic :: Internet :: WWW/HTTP",
  "Typing :: Typed",
]
description = "SQLModel, SQL databases in Python, designed for simplicity, compatibility, and robustness."
documentation = "https://sqlmodel.tiangolo.com"
exclude = ["sqlmodel/sql/expression.py.jinja2"]
homepage = "https://github.com/tiangolo/sqlmodel"
license = "MIT"
name = "modelyst-sqlmodel"
packages = [
  {include = "sqlmodel", from = "."},
]
readme = "README.md"
repository = "https://github.com/tiangolo/sqlmodel"
version = "0.0.5"

[tool.poetry.dependencies]
SQLAlchemy = ">=1.4.17,<1.5.0"
pydantic = "^1.8.2"
python = "^3.6.1"
sqlalchemy2-stubs = {version = "*", allow-prereleases = true}

[tool.poetry.dev-dependencies]
async-exit-stack = {version = "*", python = "~3.6"}
async_generator = {version = "*", python = "~3.6"}
autoflake = "^1.4"
black = {version = "^21.5-beta.1", python = "^3.7"}
coverage = {extras = ["toml"], version = "^5.5"}
fastapi = "^0.68.0"
flake8 = "^3.9.2"
isort = "^5.9.3"
mdx-include = "^1.4.1"
mkdocs = "^1.2.1"
mkdocs-material = "^7.1.9"
mypy = "^0.812"
pytest = "^6.2.4"
requests = "^2.26.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry-version-plugin]
source = "init"

[tool.coverage.run]
parallel = true
source = [
  "docs_src",
  "tests",
  "sqlmodel",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  'if __name__ == "__main__":',
  "if TYPE_CHECKING:",
]

[tool.isort]
known_third_party = ["sqlmodel"]
profile = "black"
skip_glob = [
  "sqlmodel/__init__.py",
]

[tool.mypy]
# --strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
implicit_reexport = false
no_implicit_optional = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
# --strict end
